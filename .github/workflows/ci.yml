name: RustSpray CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # 1Ô∏è‚É£  Checkout
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£  Host-side build deps (for clippy/tests)
      - name: Install host deps
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-dev clang libclang-dev libopencv-dev pkg-config

      # 3Ô∏è‚É£  Refresh Cargo.lock (same as before) ‚Ä¶
      # (Keep your existing ‚ÄúRefresh Cargo.lock‚Äù step here)

      # 4Ô∏è‚É£  Toolchain
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy,rustfmt

      # 5Ô∏è‚É£  Cache host
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/debug
            target/release
          key: ${{ runner.os }}-cargo-host-${{ hashFiles('**/Cargo.lock') }}

      # 6Ô∏è‚É£  Lint / fmt / tests
      - name: Clippy
        env:
          OPENCV_PKGCONFIG_NAME: opencv4
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Format check
        run: cargo fmt -- --check

      - name: Unit tests
        env:
          OPENCV_PKGCONFIG_NAME: opencv4
        run: cargo test --all-targets --all-features

      # 7Ô∏è‚É£  Install cross
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross --tag v0.2.4

      # 8Ô∏è‚É£  Cache ARM artefacts (incl. OpenCV build)
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cross
            ~/.cargo/registry
            ~/.cargo/git
            target/aarch64-unknown-linux-gnu
          key: ${{ runner.os }}-cargo-aarch64-${{ hashFiles('**/Cargo.lock') }}

      # 9Ô∏è‚É£  Build release binary for ARM64 (download+build OpenCV)
      - name: Build (aarch64-unknown-linux-gnu)
        env:
          OPENCV_DOWNLOAD: "1"
          OPENCV_DISABLE_PROBES: "1"
        run: cross build --release --target aarch64-unknown-linux-gnu

      # üîü  Upload binary
      - uses: actions/upload-artifact@v4
        with:
          name: rustspray-aarch64
          path: target/aarch64-unknown-linux-gnu/release/rustspray
