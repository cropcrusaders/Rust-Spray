name: ubi – multi‑platform build & release

on:
  #
  # • Any push to the listed branches   → full build, artifacts in Actions tab
  # • Push a tag matching v*            → above + draft GitHub Release
  # • Manual trigger                    → workflow_dispatch
  #
  push:
    branches: [ main ]       # ⇐ change or expand this list as you wish
    tags:
      - 'v*'                 # version tags still hit the same workflow
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: Build – ${{ matrix.platform.os_name }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          # ───────────── desktop targets ─────────────
          - os_name: FreeBSD-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-freebsd
            bin: ubi
            name: ubi-FreeBSD-x86_64.tar.gz
            cross: true
            cargo_command: ./cross

          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: ubi
            name: ubi-Linux-x86_64-musl.tar.gz
            cross: false
            cargo_command: cargo

          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: ubi.exe
            name: ubi-Windows-aarch64.zip
            cross: false
            cargo_command: cargo

          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: ubi
            name: ubi-Darwin-x86_64.tar.gz
            cross: false
            cargo_command: cargo

          # ───────────── Raspberry Pi targets ─────────────
          - os_name: RaspberryPi-armv7
            os: ubuntu-20.04
            target: armv7-unknown-linux-gnueabihf
            bin: ubi
            name: ubi-RaspberryPi-armv7.tar.gz
            cross: true
            cargo_command: ./cross

          - os_name: RaspberryPi-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            bin: ubi
            name: ubi-RaspberryPi-aarch64.tar.gz
            cross: true
            cargo_command: ./cross

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust (native)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}
        if: ${{ !matrix.platform.cross }}

      - name: Install musl‑tools
        if: contains(matrix.platform.os, 'ubuntu') && !matrix.platform.cross
        run: sudo apt-get update -y && sudo apt-get install -y musl-tools

      - name: Install cross (*nix)
        if: matrix.platform.cross && !contains(matrix.platform.os, 'windows')
        shell: bash
        run: |
          set -e
          mkdir -p "$HOME/bin"
          ./bootstrap/bootstrap-ubi.sh
          "$HOME/bin/ubi" --project cross-rs/cross --matching musl --in .

      - name: Install cross (Windows)
        if: matrix.platform.cross && contains(matrix.platform.os, 'windows')
        shell: powershell
        run: |
          .\bootstrap\bootstrap-ubi.ps1
          .\ubi --project cross-rs/cross --in .

      - name: Build release binary (*nix)
        if: ${{ !contains(matrix.platform.os, 'windows') }}
        shell: bash
        run: |
          ${{ matrix.platform.cargo_command }} build --locked --release --target ${{ matrix.platform.target }}

      - name: Build release binary (Windows)
        if: contains(matrix.platform.os, 'windows')
        shell: powershell
        run: |
          & ${{ matrix.platform.cargo_command }} build --locked --release --target ${{ matrix.platform.target }}

      - name: Strip binary
        if: ${{ !(matrix.platform.cross || matrix.platform.target == 'aarch64-pc-windows-msvc') }}
        shell: bash
        run: |
          strip target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Package artifact
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -

      # Always upload build artifacts so they’re visible in the Actions tab
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ubi-${{ matrix.platform.os_name }}-${{ github.sha }}
          path: "ubi*"

      # Only create a draft Release when ref is a v* tag
      - name: Create draft GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "ubi*"
          body_path: Changes.md
