name: RustSpray CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # for OpenCV pkg-config
      OPENCV_PKGCONFIG_NAME: opencv4
      # ensure cross pulls fresh Docker images
      CROSS_SKIP_LOCAL_IMAGE: true

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Host deps for clippy/tests
      - name: Install host dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            llvm-dev clang libclang-dev \
            libopencv-dev pkg-config

      # 3Ô∏è‚É£ Rust toolchain + components
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy,rustfmt

      # 4Ô∏è‚É£ Caching: only hash Cargo.lock (no Cross.toml needed)
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo git
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            target/debug
            target/release
            ~/.cross
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}

      # 5Ô∏è‚É£ Refresh Cargo.lock (error on PR if stale; auto-commit on main)
      - name: Refresh Cargo.lock
        env:
          GH_TOKEN: ${{ secrets.PAT_PUSH }}
        run: |
          cargo generate-lockfile
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            git diff --quiet Cargo.lock \
              || { echo "::error::Cargo.lock is stale. Run 'cargo generate-lockfile'."; exit 1; }
          else
            if ! git diff --quiet Cargo.lock; then
              git config user.name  "GitHub Actions"
              git config user.email "actions@github.com"
              git add Cargo.lock
              git commit -m "ci: refresh Cargo.lock [skip ci]"
              git push
            fi
          fi

      # 6Ô∏è‚É£ Lint, fmt & tests
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Format check
        run: cargo fmt -- --check

      - name: Unit tests
        run: cargo test --all-targets --all-features

      # 7Ô∏è‚É£ Install cross & cross-build for Pi
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross --tag v0.2.4

      - name: Cross build for aarch64 (Raspberry Pi)
        run: cross build --release --target aarch64-unknown-linux-gnu

      # üîü Upload Pi binary
      - name: Upload Pi binary
        uses: actions/upload-artifact@v4
        with:
          name: rustspray-aarch64
          path: target/aarch64-unknown-linux-gnu/release/rustspray
