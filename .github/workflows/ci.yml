name: RustSpray CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout
    - name: Checkout
      uses: actions/checkout@v4

    # 2️⃣ Install stable Rust for the host runner (x86_64)
    - name: Set up Rust (host)
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable

    # 3️⃣ Cache host build artifacts
    - name: Cache cargo (host)
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-host-${{ hashFiles('**/Cargo.lock') }}

    # 4️⃣ Run tests on x86_64
    - name: Unit tests (host)
      run: cargo test --all-targets --all-features

    # 5️⃣ Install cross-rs (handles toolchains + OpenCV for us)
    - name: Install cross
      run: cargo install cross

    # 6️⃣ Cache ARM64 build artifacts separately
    - name: Cache cargo (aarch64)
      uses: actions/cache@v3
      with:
        path: |
          ~/.cross
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-aarch64-${{ hashFiles('**/Cargo.lock') }}

    # 7️⃣ Cross-compile for Raspberry Pi 5 / generic ARM64 Linux
    - name: Build for aarch64
      run: cross build --release --target aarch64-unknown-linux-gnu

    # 8️⃣ Upload the binary
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: rustspray-aarch64
        path: target/aarch64-unknown-linux-gnu/release/rustspray
