name: Build-in-Docker

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-in-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.pi-opencv
          push: true
          tags: ghcr.io/${{ github.repository }}/rustspray-cross-pi5:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/rustspray-cross-pi5:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}/rustspray-cross-pi5:buildcache,mode=max

      - name: Build inside Docker container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            ghcr.io/${{ github.repository }}/rustspray-cross-pi5:latest \
            bash -c "cd /workspace && cargo build --release --target aarch64-unknown-linux-gnu"

      - name: Upload Pi5 binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustspray-pi5
          path: target/aarch64-unknown-linux-gnu/release/rustspray
