name: Build

on:
  push:
    branches: ["main"]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            dockerfile: docker/Dockerfile.aarch64
            image: ghcr.io/cropcrusaders/aarch64-opencv:0.3.0
            arch: arm64
          - target: armv7-unknown-linux-gnueabihf
            dockerfile: docker/Dockerfile.armv7
            image: ghcr.io/your-org/armv7-opencv:0.2.6
            arch: armv7

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        # The cross crate is no longer published on crates.io.
        # Install straight from the repository and optionally lock to a tag.
        run: cargo install cross --git https://github.com/cross-rs/cross --locked

      - name: Install cargo-deb
        if: github.event_name == 'release'
        run: cargo install cargo-deb --locked

      - name: Restore cached cross image
        id: cache-cross
        uses: actions/cache@v3
        with:
          path: cross-image-${{ matrix.arch }}.tar
          key: ${{ runner.os }}-${{ matrix.image }}-${{ hashFiles(matrix.dockerfile) }}

      - name: Load cross image
        if: steps.cache-cross.outputs.cache-hit == 'true'
        run: docker load -i cross-image-${{ matrix.arch }}.tar

      - name: Build custom cross image
        if: steps.cache-cross.outputs.cache-hit != 'true'
        run: docker build -t ${{ matrix.image }} -f ${{ matrix.dockerfile }} .

      - name: Save cross image
        if: steps.cache-cross.outputs.cache-hit != 'true'
        run: docker save ${{ matrix.image }} -o cross-image-${{ matrix.arch }}.tar

      - name: +8 GB swap to survive clang
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 8

      - name: Build
        env:
          PKG_CONFIG_ALLOW_CROSS: "1"
          CARGO_INCREMENTAL: "0"                 # still saves memory
        run: cross build --release --target ${{ matrix.target }} --verbose

      - name: Upload artifact
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: rustspray-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/rustspray

      - name: Build Debian package
        if: github.event_name == 'release'
        run: cargo deb --no-build --target ${{ matrix.target }}

      - name: Upload Debian package
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/${{ matrix.target }}/debian/rustspray_*.deb
          asset_name: rustspray_${{ github.event.release.tag_name }}_${{ matrix.arch }}.deb
          asset_content_type: application/vnd.debian.binary-package
