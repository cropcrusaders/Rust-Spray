name: Refresh Cargo.lock PR

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Triggers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
on:
  workflow_dispatch:                # manual ‚ÄúRun workflow‚Äù button
  schedule:
    - cron: "0 3 * * *"             # nightly at 03:00 UTC  (adjust if you like)
  push:
    branches: [main]                # also run after every push to main

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Permissions ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
permissions:
  contents: write                   # allow pushing branches
  pull-requests: write              # allow opening PRs

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Job ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
jobs:
  refresh-lockfile:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    # 1Ô∏è‚É£  Checkout full history so we can create branches
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2Ô∏è‚É£  Install stable Rust toolchain
    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable

    # 3Ô∏è‚É£  Ensure GitHub CLI is available (pre-installed on runners)
    - name: Check GitHub CLI
      run: gh --version

    # 4Ô∏è‚É£  Regenerate Cargo.lock
    - name: Generate Cargo.lock
      run: cargo generate-lockfile

    # 5Ô∏è‚É£  Detect whether Cargo.lock changed
    - name: Detect changes
      id: cargo_diff
      run: |
        if git diff --quiet Cargo.lock; then
          echo "no_changes=true" >> "$GITHUB_OUTPUT"
          echo "üìã No changes detected in Cargo.lock"
        else
          echo "no_changes=false" >> "$GITHUB_OUTPUT"
          echo "üìã Changes detected in Cargo.lock:"
          git diff --stat Cargo.lock
        fi

    # 6Ô∏è‚É£  Skip if no changes
    - name: No changes detected
      if: steps.cargo_diff.outputs.no_changes == 'true'
      run: |
        echo "‚úÖ Cargo.lock is already up to date"
        echo "üéØ No pull request needed"

    # 7Ô∏è‚É£  If changed, commit to new branch & open PR
    - name: Create branch, commit and open PR
      if: steps.cargo_diff.outputs.no_changes == 'false'
      env:
        GH_TOKEN: ${{ github.token }}         # use built-in GITHUB_TOKEN
        TZ: Australia/Brisbane
      run: |
        # unique branch name
        BRANCH="lockfix/refresh-$(date +%Y-%m-%d-%H%M)"
        git checkout -b "$BRANCH"

        # commit the updated lockfile
        git config user.name  "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add Cargo.lock
        git commit -m "chore: refresh Cargo.lock"
        git push origin "$BRANCH"

        # open a pull request with error handling
        if ! gh pr create \
          --title "chore: refresh Cargo.lock" \
          --body  "Automated lockfile refresh - updates dependencies to latest compatible versions" \
          --head  "$BRANCH" \
          --base  "main"; then
          echo "‚ùå Failed to create PR automatically"
          echo "‚úÖ Branch '$BRANCH' was created successfully"
          echo "üìù Please create the PR manually at:"
          echo "   https://github.com/${{ github.repository }}/pull/new/$BRANCH"
          exit 0  # don't fail the workflow
        else
          echo "‚úÖ Pull request created successfully"
        fi
