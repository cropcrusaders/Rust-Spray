name: Cross Build for Raspberry Pi

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            dockerfile: Dockerfile.pi-opencv
            image: custom/aarch64-opencv
            arch: aarch64
          - target: armv7-unknown-linux-gnueabihf
            dockerfile: Dockerfile.pi-opencv-armv7
            image: custom/armv7-opencv
            arch: armv7
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross

      - name: Restore cached cross image
        id: cache-cross
        uses: actions/cache@v3
        with:
          path: cross-image-${{ matrix.arch }}.tar
          key: ${{ runner.os }}-${{ matrix.image }}-${{ hashFiles(matrix.dockerfile) }}

      - name: Load cross image
        if: steps.cache-cross.outputs.cache-hit == 'true'
        run: docker load -i cross-image-${{ matrix.arch }}.tar

      - name: Build custom cross image
        if: steps.cache-cross.outputs.cache-hit != 'true'
        run: docker build -t ${{ matrix.image }} -f ${{ matrix.dockerfile }} .

      - name: Save cross image
        if: steps.cache-cross.outputs.cache-hit != 'true'
        run: docker save ${{ matrix.image }} -o cross-image-${{ matrix.arch }}.tar

      - name: Cross build for Raspberry Pi
        run: cross build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustspray-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/rustspray
