FROM ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main AS builder

# Install required dependencies for OpenCV
# Replace all existing sources with a minimal list from ports.ubuntu.com
RUN printf 'Acquire::http::Pipeline-Depth "0";\nAcquire::http::No-Cache "true";\nAcquire::Retries "5";\n' > /etc/apt/apt.conf.d/99ci && \
    rm -f /etc/apt/sources.list.d/ports.list && \
    printf 'deb http://ports.ubuntu.com/ubuntu-ports focal main universe\n' \
           'deb http://ports.ubuntu.com/ubuntu-ports focal-updates main universe\n' \
           'deb http://ports.ubuntu.com/ubuntu-ports focal-security main universe\n' \
           'deb http://ports.ubuntu.com/ubuntu-ports focal-backports main universe\n' \
           > /etc/apt/sources.list && \
    dpkg --remove-architecture amd64 || true && \
    dpkg --remove-architecture i386 || true && \
    test -z "$(dpkg --print-foreign-architectures)" && \
    apt-get -o Acquire::Retries=3 update && \
    apt-get -o Acquire::Retries=3 install -y \
      pkg-config \
      libgtk-3-dev \
      libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
      libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev gfortran \
      openexr libatlas-base-dev python3-dev python3-numpy libtbb2 libtbb-dev \
      libdc1394-dev cmake git clang && \
    rm -rf /var/lib/apt/lists/*

# Build and install OpenCV for ARM64
WORKDIR /opt
RUN git clone --depth 1 --branch 4.8.0 https://github.com/opencv/opencv.git && \
    git clone --depth 1 --branch 4.8.0 https://github.com/opencv/opencv_contrib.git && \
    mkdir -p build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DOPENCV_GENERATE_PKGCONFIG=ON \
        -DOPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib/modules \
        -DOPENCV_ENABLE_NONFREE=ON \
        -DENABLE_PRECOMPILED_HEADERS=OFF \
        -DBUILD_opencv_legacy=OFF \
        ../opencv && \
    make -j$(nproc) && make install

# Copy OpenCV libraries and pkg-config file to sysroot
RUN mkdir -p /aarch64-linux-gnu/lib && \
    cp -r /usr/local/lib/* /aarch64-linux-gnu/lib/ && \
    mkdir -p /aarch64-linux-gnu/include && \
    cp -r /usr/local/include/* /aarch64-linux-gnu/include/ && \
    mkdir -p /aarch64-linux-gnu/lib/pkgconfig && \
    cp /usr/local/lib/pkgconfig/opencv4.pc /aarch64-linux-gnu/lib/pkgconfig/

# Final image: will be used by cross
FROM ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main
RUN find /etc/apt -name '*.list' -print0 \
        | xargs -0 sed -i \
            -e 's|archive.ubuntu.com/ubuntu|ports.ubuntu.com/ubuntu-ports|g' \
            -e 's|security.ubuntu.com/ubuntu|ports.ubuntu.com/ubuntu-ports|g' && \
    rm -f /etc/apt/sources.list.d/ports.list && \
    printf 'Acquire::http::Pipeline-Depth "0";\nAcquire::http::No-Cache "true";\nAcquire::Retries "5";\n' > /etc/apt/apt.conf.d/99ci && \
    dpkg --remove-architecture amd64 || true && \
    dpkg --remove-architecture i386 || true && \
    test -z "$(dpkg --print-foreign-architectures)" && \
    apt-get -o Acquire::Retries=3 update && \
    apt-get -o Acquire::Retries=3 --fix-missing install -y pkg-config && \
    rm -rf /var/lib/apt/lists/*
COPY --from=builder /aarch64-linux-gnu /usr/aarch64-linux-gnu
ENV PKG_CONFIG_PATH=/usr/aarch64-linux-gnu/lib/pkgconfig
ENV LIBRARY_PATH=/usr/aarch64-linux-gnu/lib
ENV LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib
