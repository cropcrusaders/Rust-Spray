FROM ubuntu:22.04 AS builder

# Configure tzdata non-interactively to avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Australia/Brisbane

RUN apt-get update && \
    apt-get install -y --no-install-recommends tzdata && \
    ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*

# Install required dependencies for OpenCV
RUN CODENAME=$(. /etc/os-release && echo $VERSION_CODENAME) && \
    dpkg --add-architecture armhf && \
    dpkg --remove-architecture i386 || true && \
    sed -Ei '/^deb \[/! s/^deb /deb [arch=amd64] /' /etc/apt/sources.list && \
    printf 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports %s main universe restricted\n' "$CODENAME" > /etc/apt/sources.list.d/armhf.list && \
    printf 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports %s-updates main universe restricted\n' "$CODENAME" >> /etc/apt/sources.list.d/armhf.list && \
    printf 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports %s-security main universe restricted\n' "$CODENAME" >> /etc/apt/sources.list.d/armhf.list && \
    apt-get -o Acquire::Retries=3 update && \
    apt-get -o Acquire::Retries=3 install -y \
      pkg-config pkg-config-arm-linux-gnueabihf \
      libgtk-3-dev \
      libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
      libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev gfortran \
      openexr libatlas-base-dev python3-dev python3-numpy libtbb2 libtbb-dev \
      libunwind-dev \
      libdc1394-dev cmake git clang && \
    rm -rf /var/lib/apt/lists/*

# Build and install OpenCV for ARMv7
WORKDIR /opt
RUN git clone --depth 1 --branch 4.10.0 https://github.com/opencv/opencv.git && \
    git clone --depth 1 --branch 4.10.0 https://github.com/opencv/opencv_contrib.git && \
    mkdir -p build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DOPENCV_GENERATE_PKGCONFIG=ON \
        -DOPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib/modules \
        -DOPENCV_ENABLE_NONFREE=ON \
        -DENABLE_PRECOMPILED_HEADERS=OFF \
        -DBUILD_opencv_legacy=OFF \
        -DWITH_IPP=OFF \
        -DBUILD_LIST=core,imgproc,highgui,imgcodecs,videoio,objdetect \
        ../opencv && \
    make -j$(nproc) && make install

# Copy OpenCV libraries and pkg-config file to sysroot
RUN mkdir -p /arm-linux-gnueabihf/lib && \
    cp -r /usr/local/lib/* /arm-linux-gnueabihf/lib/ && \
    mkdir -p /arm-linux-gnueabihf/include && \
    cp -r /usr/local/include/* /arm-linux-gnueabihf/include/ && \
    mkdir -p /arm-linux-gnueabihf/lib/pkgconfig && \
    cp /usr/local/lib/pkgconfig/opencv4.pc /arm-linux-gnueabihf/lib/pkgconfig/

# Final image: will be used by cross
FROM ubuntu:22.04
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Australia/Brisbane

RUN apt-get update && \
    apt-get install -y --no-install-recommends tzdata && \
    ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*
RUN CODENAME=$(. /etc/os-release && echo $VERSION_CODENAME) && \
    dpkg --add-architecture armhf && \
    dpkg --remove-architecture i386 || true && \
    sed -Ei '/^deb \[/! s/^deb /deb [arch=amd64] /' /etc/apt/sources.list && \
    printf 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports %s main universe restricted\n' "$CODENAME" > /etc/apt/sources.list.d/armhf.list && \
    printf 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports %s-updates main universe restricted\n' "$CODENAME" >> /etc/apt/sources.list.d/armhf.list && \
    printf 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports %s-security main universe restricted\n' "$CODENAME" >> /etc/apt/sources.list.d/armhf.list && \
    apt-get -o Acquire::Retries=3 update && \
    apt-get -o Acquire::Retries=3 --fix-missing install -y pkg-config pkg-config-arm-linux-gnueabihf && \
    rm -rf /var/lib/apt/lists/*
COPY --from=builder /arm-linux-gnueabihf /usr/arm-linux-gnueabihf
ENV PKG_CONFIG_PATH=/usr/arm-linux-gnueabihf/lib/pkgconfig
ENV LIBRARY_PATH=/usr/arm-linux-gnueabihf/lib
ENV LD_LIBRARY_PATH=/usr/arm-linux-gnueabihf/lib
